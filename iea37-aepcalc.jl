function onewake(xh, yh, xp, yp, D)    x = xp - xh    y = yp - yh    # constants    CT = 8.0/9    ky = 0.0324555    if x > 0        sigmay = ky*x + D/sqrt(8)        deltau = (1 - sqrt(1 - CT/(8*sigmay^2/D^2))) * exp(-0.5*(y/sigmay)^2)    else        deltau = 0.0    end    return deltauendfunction wakedeficit(xh, yh, D)    n = length(xh)    loss = zeros(n)    for i = 1:n  # loss for turbine i            sumsq = 0.0        for j = 1:n  # sum losses from all other turbines j            if i != j                sumsq += onewake(xh[j], yh[j], xh[i], yh[i], D)^2            end        end                loss[i] = sqrt(sumsq)    end    return lossendfunction farmpower(xh, yh, Vinf, Vin, Vout, Vrated, D, Prated)        # hub velocities    loss = wakedeficit(xh, yh, D)    Vhub = Vinf*(1-loss)    # iterate across turbines    n = length(xh)    power = zeros(n)    for i = 1:n        if Vhub[i] > Vout            continue        elseif Vhub[i] > Vrated            power[i] = Prated         elseif Vhub[i] > Vin             power[i] = Prated * ((Vhub[i] - Vin)/(Vrated - Vin))^3        end    end    return sum(power)endfunction relativepositions(xg, yg, dir)    theta = -(pi/2 + dir)    xr = xg*cos(theta) + yg*sin(theta)    yr = -xg*sin(theta) + yg*cos(theta)    return xr, yrendfunction aep(Vinf, dir, freq, xg, yg, Vin, Vout, Vrated, D, Prated)    n = length(freq)    P = zeros(n)    for i = 1:n        xr, yr = relativepositions(xg, yg, dir[i])        P[i] = farmpower(xr, yr, Vinf[i], Vin, Vout, Vrated, D, Prated)    end    AEP = sum(freq .* P) * 8760end